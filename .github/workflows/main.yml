name: Go pipeline
on: 
  push: 
     branches: [ "main" ]
  pull_request: 
     branches: [ "main" ]
     
jobs: 
    Build:
        runs-on: ubuntu-latest
        steps: 
          - name: checkout repository code 
            uses: actions/checkout@v2
#             env: 
#                 DOCKER_USER: ${{ secrets.DOCKER_USER }}
#                 DOCKER_PASS : ${{ secrets.DOCKER_PASS }}
#             run: |
#                 docker login -u $DOCKER_USER -p $DOCKER_PASS

          - name: setup Go
            uses: actions/setup-go@v2
            with:
                  go-version: 1.19
          - name: go build
            run: go build -v ./...
          
          
          ##       docker build ./<directory> -t ochetobo/todo-ochetobo/todo
#
 #         - name: docker push
  #          run: |
   #              docker push ochetobo/todo
    Build-image:
           runs-on: ubuntu-latest
           needs: Build
           if: success() && github.ref == 'refs/heads/staging'
           steps:
             - name: build image
               run: |
                    docker build . -t teamrulerhng9/frontend:latest
             - name: deploy image
               run: |
                    docker push teamrulerhng9/frontend:latest
               
    Deploy-staging:
           runs-on: ubuntu-latest
           needs: Build
           if: success() && github.ref == 'refs/heads/staging' 
           steps:

             - name: deploy to staging server
               uses: appleboy/ssh-action@master
               with: 
                 host: ${{ secrets.HOST }}
                 username: ${{ secrets.USERNAME }}
                 password: ${{ secrets.Password }}
                 port: ${{ secrets.PORT }}
                 script: |
                     sudo docker-compose pull
                     sudo docker-compose up -d
                  

   # Deploy-prod: 
           #  runs-on: ubuntu-latest
           #  needs: ["Build", "Deploy-staging"]
            # if: success() && github.ref == 'refs/heads/main' 
          #   steps:

            #    - name: deploy to staging server
             #     uses: appleboy/ssh-action@master
              #    with: 
                #    host: ${{ secrets.PROD_HOST }}
                #    username: ${{ secrets.USERNAME }}
                  #  password: ${{ secrets.Password }}
                  #  port: ${{ secrets.PORT }}
                  #  script: |
                  #     sudo docker-compose down pull
                        #sudo docker-compose up -d
